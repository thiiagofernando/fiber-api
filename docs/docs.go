// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login": {
            "post": {
                "description": "Authenticate a user with login and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Authenticate a user",
                "parameters": [
                    {
                        "description": "User Credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.AuthResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Create a new user by providing the username, login, and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User Registration",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RegisterDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.AuthResponse": {
            "description": "DTO for authentication response",
            "type": "object",
            "properties": {
                "autenticado": {
                    "type": "boolean"
                },
                "dataHoraExpiracao": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "usuarioLogin": {
                    "type": "string"
                },
                "usuarioNome": {
                    "type": "string"
                }
            }
        },
        "handlers.LoginDTO": {
            "description": "DTO for user login",
            "type": "object",
            "properties": {
                "senha": {
                    "type": "string"
                },
                "usuarioLogin": {
                    "type": "string"
                }
            }
        },
        "handlers.RegisterDTO": {
            "description": "DTO for user registration",
            "type": "object",
            "properties": {
                "senha": {
                    "type": "string"
                },
                "usuarioLogin": {
                    "type": "string"
                },
                "usuarioNome": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "description": "User model with GORM fields",
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "@Description Timestamp when the user was created",
                    "type": "string"
                },
                "deletedAt": {
                    "description": "@Description Timestamp when the user was deleted",
                    "type": "string"
                },
                "id": {
                    "description": "@Description The unique identifier for the user",
                    "type": "integer"
                },
                "senha": {
                    "description": "@Description User's password",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "@Description Timestamp when the user was last updated",
                    "type": "string"
                },
                "usuarioLogin": {
                    "description": "@Description User's login",
                    "type": "string"
                },
                "usuarioNome": {
                    "description": "@Description User's full name",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
